# spring data JPA/hibernate + H2 database configuration
spring:
    profiles: development
    main:
        show-banner: false
    datasource:
        platform: mysql
        #invoking the schema-''platform'.sql and data-"platfrom".sql in classpath to initialize the database when initialize=true
        initialize: true
        sqlScriptEncoding: UTF-8
        name: dataSource
        # 使用druid数据源
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/deepread?characterSetResults=UTF8&amp;characterEncoding=UTF8&amp;zeroDateTimeBehavior=convertToNull
        username: root
        password:root
        filters: stat
        maxActive: 200
        initialSize: 20
        maxWait: 60000
        minIdle: 3
        timeBetweenEvictionRunsMillis: 60000
        minEvictableIdleTimeMillis: 300000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        poolPreparedStatements: true
        maxOpenPreparedStatements: 20
    jpa:
        database: mysql
        hibernate:
            #validate: The "validate" option will check if your mapping is consistent with your database. If not, it throws an error.
            #update: update the schema.The "update" option will check if your mapping is consistent with your database. If not, it will update your database to make it consistent to your mapping.
            #create: creates the schema, destroying previous data.
            #create-drop: drop the schema at the end of the session.
            #initialize database by @Entity anotation in domain object when ddl-auto's value is update or create or create-drop
            ddl-auo: none
        showSql: true
    jackson:
        serialization:
            INDENT_OUTPUT: true

#mybatis:
#    config: mybatis-config.xml
#    mapperLocations: classpath:mapper/*.xml
#    typeAliasesPackage: com.rocky.mf.boot.examples.domain

flyway:
    enabled: false

logging:
    level:
        org:
            hibernate:
                SQL: debug